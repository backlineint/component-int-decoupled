<?php

use \Drupal\block_content\BlockContentInterface;

/**
 * Implements hook_theme_suggestions_HOOK_alter().
 * Borrowed wholesale from the useful block_type_templates module.
 */
function decoupled_block_theme_suggestions_block_alter(array &$suggestions, array $variables) {
  $content = $variables['elements']['content'];
  if (isset($content['#block_content'])
    and $content['#block_content'] instanceof BlockContentInterface) {
    $block_type_suggestion = 'block__block_content_' . $content['#block_content']->bundle();
    $suggestions_rev = array_reverse($suggestions); // Taking care of observed duplication of block__block_content
    $index = array_search('block__block_content', $suggestions_rev);
    if (is_numeric($index)) {
      array_splice($suggestions_rev, $index, 0, $block_type_suggestion);
      $suggestions = array_reverse($suggestions_rev);
    }
    else {
      $suggestions[] = $block_type_suggestion;
    }
  }
}

/**
* Implements hook_preprocess_block().
*/
function decoupled_block_preprocess_block(&$variables) {
  $content = $variables['elements']['content'];
  if (isset($content['#block_content']) && $content['#block_content'] instanceof BlockContentInterface) {
    if ($content['#block_content']->bundle() == 'decoupled_block') {
      $variables['uuid'] = $content['#block_content']->field_game->entity->uuid();
      $variables['#attached']['library'][] = 'decoupled_block/nes-container';
    }
  }
}

/**
* Implements hook_theme().
*/
function decoupled_block_theme($existing, $type, $theme, $path) {
  return array(
      'block__block_content_decoupled_block' => array(
          'template' => 'block--block-content-decoupled-block',
          'preprocess functions' => ['decoupled_block_preprocess_block']
      ),
  );
}